{"version":3,"sources":["garden.js","directives/maps.js","controllers/custAccountCtrl.js","controllers/dailyRouteCtrl.js","controllers/gMapsCtrl.js","controllers/headerCtrl.js","controllers/headerServ.js","controllers/listCustCtrl.js","controllers/loginCtrl.js","controllers/routeCtrl.js","controllers/serviceCtrl.js","services/listCustServ.js","services/loginServ.js","services/serviceSrv.js","factories/userInfoFact.js"],"names":["gardenApp","angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","directive","link","scope","element","attrs","map","infoWindow","markers","mapOptions","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","scrollwheel","initMap","Map","setMarker","position","title","content","marker","markerOptions","Marker","push","event","addListener","close","infoWindowOptions","InfoWindow","open","geocoder","Geocoder","listCheck","$watch","customers","address","i","customerSummary","fname","lname","currentservice","geocode","results","status","GeocoderStatus","OK","geometry","location","lat","lng","alert","length","template","replace","$scope","test","$http","$rootScope","userInfoFact","$on","returnCurrentUser","greeting","userProfileInfo","listCustServ","getUsers","method","then","response","originalCustList","data","console","log","routeFilter","day","techselect","selectedDayString","key","filter","currentVal","index","arr","serviceday","assignedtech","serviceComplete","customer","servicestatus","note","serviceStatus","serviceIncomplete","loginServ","newCust","email","password","returningCust","userEmail","userPassword","userInfo","addCurrentUser","$broadcast","editProfile","id","editFirstName","editLastName","editAddress","editEmail","editPassword","editCurrentService","serviceSrv","addPlan","selectedPlan","userId","servname","refreshUserInfo","getInfo","planInfo","service","customerid","customernote","catch","err","checkThis","selectedPlanId","factory","userObject","userData"],"mappings":"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","file":"bundle.js","sourcesContent":["var gardenApp = angular.module('gardenApp', ['ui.router']);\n\ngardenApp.config(function($stateProvider, $urlRouterProvider){\n   $urlRouterProvider.otherwise('/home');\n\n   $stateProvider\n       .state('homeView', {\n           url: '/home',\n           templateUrl: './html/homeView.html'\n       })\n       .state('serviceView', {\n           url: '/service',\n           templateUrl: './html/serviceView.html',\n           controller: 'headerCtrl'\n       })\n       .state('aboutView', {\n           url: '/about',\n           templateUrl: './html/aboutView.html'\n       })\n       .state('loginReturnCustView', {\n           url: '/login/returningCust',\n           templateUrl: './html/loginReturnCustView.html',\n           controller: 'loginCtrl'\n       })\n       .state('loginNewCustView', {\n           url: '/login/newCust',\n           templateUrl: './html/loginNewCustView.html',\n           controller: 'loginCtrl'\n       })\n       .state('profileEdit', {\n           url: '/profileEdit',\n           templateUrl: './html/profileEdit.html',\n           controller: 'loginCtrl'\n       })\n       .state('listCustView', {\n           url: '/listCustView',\n           templateUrl: './html/listCustView.html',\n           controller: 'listCustCtrl'\n       })\n       .state('routeView', {\n           url: '/routeView',\n           templateUrl: './html/routeView.html',\n           controller: 'listCustCtrl'\n       })\n\n});","/**\n * Created by scott on 1/1/17.\n */\n//this directive works, just not sure yet how to incorporate dynamic marker/routes\ngardenApp.directive('myMap', function() {\n    // directive link function\n    var link = function(scope, element, attrs) {\n        // console.log('myMap directive scope ' , scope);\n        var map, infoWindow;\n        var markers = [];\n        // map config\n        var mapOptions = {\n            center: new google.maps.LatLng(40.227453, -111.659166),\n            zoom: 10,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            scrollwheel: false\n        };\n        // init the map\n        function initMap() {\n            // console.log($scope.customers + 'in myMap $scope.customers');\n\n            if (map === void 0) {\n                map = new google.maps.Map(element[0], mapOptions);\n            }\n        }\n\n        // place a marker\n        function setMarker(map, position, title, content) {\n            var marker;\n            var markerOptions = {\n                position: position,\n                map: map,\n                title: title\n                // icon: 'https://maps.google.com/mapfiles/ms/icons/green-dot.png'\n            };\n\n            marker = new google.maps.Marker(markerOptions);\n            markers.push(marker); // add marker to array\n\n            google.maps.event.addListener(marker, 'click', function () {\n                // close window if not undefined\n                if (infoWindow !== void 0) {\n                    infoWindow.close();\n                }\n                // create new window\n                var infoWindowOptions = {\n                    content: content\n                };\n                infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n                infoWindow.open(map, marker);\n            });\n        }\n\n        // show the map and place some markers\n        initMap();\n\n        var geocoder = new google.maps.Geocoder();\n\n\n        // var thingy = {'address': '8044 Coolidge St'};\n        // geocoder.geocode( {'address': '8044 Coolidge St'}, function(results, status){\n        //     var addr_type = results[0].types[0]; //type of address that was geocoded\n        //     if(status == google.maps.GeocoderStatus.OK){\n        //         ShowLocation( results[0].geometry.location, address, addr_type)\n        //     }\n        //     else {\n        //         alert(\"Gecode was not successful for the following reason: \" + status);\n        //     }\n        // });\n\n\n        var listCheck = scope.$watch('customers', function(){\n            // alert(scope.customers);\n            if(scope.customers){\n                for(var i = 0; i < scope.customers.length; i++){\n                    //addres and customerSummary need to use ES6 let, instead of var, for infoWindows to have dynamic content, unkown reasons\n                    let address = {\"address\": scope.customers[i].address };\n                    let customerSummary = scope.customers[i].fname + \" \" + scope.customers[i].lname + \" service: \" + scope.customers[i].currentservice ;\n                    // console.log();\n                    geocoder.geocode( address, function(results, status){\n                        scope.results = results;\n                        // console.log('results', results);\n                        // var addr_type = results[0].types[0]; //type of address that was geocoded\n                        if(status == google.maps.GeocoderStatus.OK){\n                            // console.log('----------------' , results[0].geometry.location.lat(), results[0].geometry.location.lng());\n                            // ShowLocation( results[0].geometry.location, JSON.stringify({ address: '62 w 300 n, salt lake city, ut' }), customerSummary); //addr_type)\n                            setMarker(map, new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()), 'check this out', customerSummary);\n                            // setMarker(map , new google.maps.LatLng)\n                        }\n                        else {\n                            alert(\"Geocode was not successful for the following reason: \" + status);\n                        }\n                    });\n\n\n                }\n            }\n        });\n\n\n        // function ShowLocation( latlng, address, customerSummary)\n        // {\n        //     // Center the map at the specified location\n        //     map.setCenter( latlng );\n        //\n        //     // Set the zoom level according to the address level of detail the user specified\n        //     var zoom = 12;\n        //     // switch ( addr_type )\n        //     // {\n        //     //     case \"administrative_area_level_1\"\t: zoom = 6; break;\t\t// user specified a state\n        //     //     case \"locality\"\t\t\t\t\t\t: zoom = 10; break;\t\t// user specified a city/town\n        //     //     case \"street_address\"\t\t\t\t: zoom = 15; break;\t\t// user specified a street address\n        //     // }\n        //     map.setZoom( zoom );\n        //\n        //     // Place a Google Marker at the same location as the map center\n        //     // When you hover over the marker, it will display the title\n        //     var marker = new google.maps.Marker( {\n        //         position: latlng,\n        //         map: map,\n        //         title: address\n        //     });\n        //\n        //     // Create an InfoWindow for the marker\n        //     var contentString = \"<b>hi\" + customerSummary + \"</b>\";\t// HTML text to display in the InfoWindow\n        //     var infowindow = new google.maps.InfoWindow( { content: contentString } );\n        //\n        //     // Set event to display the InfoWindow anchored to the marker when the marker is clicked.\n        //     google.maps.event.addListener( marker, 'click', function() { infowindow.open( map, marker ); });\n        // }\n\n        setMarker(map, new google.maps.LatLng(51.508515, -0.125487), 'London', 'Just some content');\n        setMarker(map, new google.maps.LatLng(52.370216, 4.895168), 'Amsterdam', 'More content');\n        setMarker(map, new google.maps.LatLng(48.856614, 2.352222), 'Paris', 'Text here');\n    };\n\n    return {\n        template: '<div id=\"gmaps\"></div>',\n        replace: true,\n        link: link\n    };\n});\n","gardenApp.controller('custAccountCtrl', function($scope){\n\n    $scope.test = 'custAccountCtrl is working';\n\n});","gardenApp.controller('dailyRouteCtrl', function($scope){\n\n    $scope.test = 'dailyRouteCtrl is working';\n\n});","gardenApp.controller('gMapsCtrl', function($scope){\n\n    $scope.test = 'gMapsCtrl is working';\n\n});","gardenApp.controller('headerCtrl', function($scope, $http, $rootScope, userInfoFact){\n\n    $rootScope.$on('userLoggedIn', () => {\n        let link = 'welcome ' + userInfoFact.returnCurrentUser().fname;\n        $scope.greeting = link;\n        $rootScope.userProfileInfo = userInfoFact.returnCurrentUser();\n    });\n\n });\n\n\n// userInfoFact.returnCurrentUser().fname","","gardenApp.controller('listCustCtrl', function($scope, $http, listCustServ){\n\n    let getUsers = () => {\n        $http({\n            method: 'GET',\n            url: '/listall'\n        }).then(function(response){\n            $scope.originalCustList = response.data;\n        })\n    };\n    getUsers();\n\n    $scope.$watch('customers', function(){\n       console.log('$scope.customers', $scope.customers);\n    });\n\n    $scope.routeFilter = (day, techselect) => {\n\n        let selectedDayString = [];\n        console.log(day);\n        for ( let key in day){\n            selectedDayString.push(key);\n        }\n\n        $scope.customers = $scope.originalCustList.filter(function(currentVal, index, arr){\n            if(day && techselect){\n                if(selectedDayString[0] === currentVal.serviceday && techselect === currentVal.assignedtech ){\n                    return currentVal;\n                }\n            }\n            else if (day) {\n                if(selectedDayString[0] === currentVal.serviceday){\n                    return currentVal;\n                }\n            }\n            else if (techselect) {\n                if(techselect === currentVal.assignedtech){\n                    return currentVal;\n                }\n            }\n        });\n    };\n\n    $scope.serviceComplete = function(customer){\n        customer.servicestatus = 'complete';\n        console.log('serviceComplete', customer);\n        if(!customer.note){\n            alert('oops, leave a little note please');\n        }\n        else if(customer.note){\n            listCustServ.serviceStatus(customer);\n        }\n    };\n\n    $scope.serviceIncomplete = function(customer){\n        customer.servicestatus = 'incomplete';\n        console.log('serviceIncomplete', customer);\n        if(!customer.note){\n            alert('oops, leave a little note please');\n        }\n        if(customer.note){\n            listCustServ.serviceStatus(customer);\n        }\n    };\n\n\n//      $scope.initMap = function initMap() {\n// //                var headQuarters = {lat: -25.363, lng: 131.044};\n//\n//         $scope.map = new google.maps.Map(document.getElementById('map'), {\n//             zoom: 11,\n//             mapTypeId: 'roadmap'\n//         });\n//         console.log($scope.customers);\n//         // for(var i = 0; i < $scope.customers.length; i++){\n//         //     var marker = new google.maps.Marker({\n//         //         position: { lat: 40.24, lng: -111.65 },\n//         //         map: $scope.map\n//         //     });\n//         // }\n//         var marker = new google.maps.Marker({\n//            position: { lat: 40.3, lng: -111.5},\n//            map: $scope.map\n//         });\n//\n//         $scope.infoWindow = new google.maps.InfoWindow({map: $scope.map});\n//         function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n//            infoWindow.setPosition(pos);\n//            infoWindow.setContent(browserHasGeolocation ?\n//                 'Error: The Geolocation service failed.' :\n//                 'Error: Your browser doesn\\'t support geolocation.');\n//         }\n//\n//         // Try HTML5 geolocation.\n//         if (navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(function(position) {\n//                 $scope.pos = {\n//                     lat: position.coords.latitude,\n//                     lng: position.coords.longitude\n//                 };\n//                 $scope.currentPosition = new google.maps.Marker({\n//                     position: $scope.pos,\n//                     map: $scope.map\n//                 });\n//\n//                 $scope.infoWindow.setPosition($scope.pos);\n//                 $scope.infoWindow.setContent('Location found.');\n//                 $scope.map.setCenter($scope.pos);\n//             }, function() {\n//                 handleLocationError(true, $scope.infoWindow, $scope.map.getCenter());\n//             });\n//         } else {\n//             // Browser doesn't support Geolocation\n//             handleLocationError(false, $scope.infoWindow, $scope.map.getCenter());\n//         }\n//\n//\n//     };\n\n    // $scope.initMap();\n\n});","gardenApp.controller('loginCtrl', function($scope, $http, loginServ, $rootScope, userInfoFact) {\n\n\n    $scope.newCust = function (fname, lname, address, email, password) {\n        if(fname && lname && address && email && password) {\n            loginServ.newCust(fname, lname, address, email, password)\n                .then(function (response) {});\n        }\n        else {\n            alert('sorry, please fill in all fields, their all actually pretty important');\n        }\n        $scope.fname = '';\n        $scope.lname = '';\n        $scope.address = '';\n        $scope.email = '';\n        $scope.password = '';\n        $scope.currentservice = '';\n\n\n    };\n\n    $scope.returningCust = function(userEmail, userPassword){\n        if(userEmail && userPassword){\n            loginServ.returningCust(userEmail, userPassword)\n                .then(function(response){\n                    $scope.userInfo = response;\n                    console.log('in returningCust loginCtrl, response[0]', response[0]);\n                    userInfoFact.addCurrentUser(response[0]);\n                    $rootScope.$broadcast('userLoggedIn');\n                })\n        }\n        else {\n            alert('sorry, to validate login you need a email and a password entry');\n        }\n        $scope.userEmail = '';\n        $scope.userPassword = '';\n    };\n\n    $scope.editProfile = function (fname, lname, address, email, password, id, currentservice) {\n        if(fname && lname && address && email && password && currentservice) {\n            loginServ.editProfile(fname, lname, address, email, password, id, currentservice)\n                .then(function (response) {\n                    $scope.userProfileInfo.fname = loginServ.editFirstName;\n                    $scope.userProfileInfo.lname = loginServ.editLastName;\n                    $scope.userProfileInfo.address = loginServ.editAddress;\n                    $scope.userProfileInfo.email = loginServ.editEmail;\n                    $scope.userProfileInfo.password = loginServ.editPassword;\n                    $scope.userProfileInfo.currentservice = loginServ.editCurrentService;\n                });\n        }\n        else {\n            alert('sorry, please fill in all fields, to update your profile all fields need to be filled in');\n        }\n        $scope.fname = '';\n        $scope.lname = '';\n        $scope.address = '';\n        $scope.email = '';\n        $scope.password = '';\n        $scope.currentservice = '';\n    };\n\n\n\n\n\n});","","gardenApp.controller('serviceCtrl', function($scope, serviceSrv){\n\nif($scope.userProfileInfo) {\n    var email = $scope.userProfileInfo.email;\n    var password = $scope.userProfileInfo.password;\n}\n\n    $scope.addPlan = function(selectedPlan, userId){\n        alert('you selected the ' + selectedPlan.servname + ' plan, it will be added to your account');\n        serviceSrv.addPlan(selectedPlan.id, userId)\n            .then(function(response){\n                return response;\n        });\n        serviceSrv.refreshUserInfo(email, password)\n            .then(function(response){\n                $scope.userProfileInfo.currentservice = response[0].currentservice;\n                return response;\n            })\n\n    };\n\n\n\n    $scope.getInfo = function(){\n        serviceSrv.planInfo()\n            .then(function(response){\n                $scope.planInfo = response;\n            })\n    };\n\n\n    $scope.getInfo();\n\n\n});","/**\n * Created by scott on 1/4/17.\n */\n\ngardenApp.service('listCustServ', function($http){\n\n    // this.getUsers = () => {\n    //     $http({\n    //         method: 'GET',\n    //         url: '/listall'\n    //     }).then(function(response){\n    //         // $scope.originalCustList = response.data;\n    //         return response.data\n    //     })\n    // };\n\n\n    this.serviceStatus = (customer) => {\n        alert('this is from listCust serv ' + customer.fname);\n        $http({\n            method: 'POST',\n            url: '/serviceStatus',\n            data: {\n                customerid: customer.id,\n                customernote: customer.note,\n                servicestatus: customer.servicestatus,\n                customer: customer.fname\n            }\n        }).then( function(response){\n            console.log('listCustServ response', response);\n            return response\n        }).catch( function(err){\n            console.log(err);\n        })\n\n    }\n\n});","gardenApp.service('loginServ', function($http){\n\n\n\n\n\n    this.newCust = function(fname, lname, address, email, password){\n        return $http({\n            method: \"POST\",\n            url: '/login/newCust',\n            data: {\n                fname: fname,\n                lname: lname,\n                address: address,\n                email: email,\n                password: password\n            }\n        }).then(function (response) {\n            alert('congrats, you registered an account! PLEASE LOG IN');\n            return response;\n        }).catch(function(err){\n            alert(err);\n        })\n    };\n\n    this.returningCust = function(userEmail, userPassword){\n        return $http({\n            method: 'POST',\n            url: '/login/returningCust',\n            data: {\n                userEmail: userEmail,\n                userPassword: userPassword\n            }\n        }).then(function(response){\n            console.log('response in returningCust loginServ', response);\n             return response.data;\n        }).catch(function(err){\n            alert(err);\n        })\n    };\n\n    this.editFirstName;\n    this.editLastName;\n    this.editAddress;\n    this.editEmail;\n    this.editPassword;\n    this.editCurrentService;\n\n    this.editProfile = function(fname, lname, address, email, password, id, currentservice){\n        this.editFirstName = fname;\n        this.editLastName = lname;\n        this.editAddress = address;\n        this.editEmail = email;\n        this.editPassword = password;\n        this.editCurrentService = currentservice;\n        return $http({\n            method: \"POST\",\n            url: '/editProfile',\n            data: {\n                fname: fname,\n                lname: lname,\n                address: address,\n                email: email,\n                password: password,\n                id: id,\n                currentservice: currentservice\n            }\n        }).then(function (response) {\n            alert('congrats, you updated your profile! ');\n            console.log(\"response from editProfile response\", response);\n            return response;\n        }).catch(function(err){\n            alert(err);\n        })\n    };\n\n\n\n\n\n\n\n\n\n});","gardenApp.service('serviceSrv', function($http){\n    this.checkThis = 'this is a test coming form the serviceSrv';\n\n    this.addPlan = function(selectedPlanId, userId){\n         return $http({\n            method: 'POST',\n            url: '/addPlan',\n            data: {\n                selectedPlanId: selectedPlanId,\n                userId: userId\n            }\n        }).then(function(response){\n            return response\n         }).catch(function(err){\n             return err;\n         })\n    };\n\n    this.planInfo = function(){\n        return $http({\n            method: 'GET',\n            url: '/planInfo'\n        }).then(function(response){\n            return response.data;\n        }).catch(function(err){\n            return err;\n        })\n    }\n\n    this.refreshUserInfo = function(email, password){\n        return $http({\n            method: 'POST',\n            url: '/login/returningCust',\n            data: {\n                userEmail: email,\n                userPassword: password\n            }\n        }).then(function(response){\n            console.log('response in returningCust loginServ', response);\n            return response.data;\n        }).catch(function(err){\n            alert(err);\n        })\n    }\n\n});","gardenApp.factory('userInfoFact', function(){\n\n    var userObject = {};\n\n    var addCurrentUser = function(userData){\n        userObject = userData;\n    };\n    var returnCurrentUser = function(){\n        return userObject;\n    };\n\n    return {\n        addCurrentUser: addCurrentUser,\n        returnCurrentUser: returnCurrentUser\n    }\n\n});"]}